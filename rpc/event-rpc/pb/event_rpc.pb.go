// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: event_rpc.proto

package event_rpc

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CommonMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic   string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Message []byte `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CommonMessage) Reset() {
	*x = CommonMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonMessage) ProtoMessage() {}

func (x *CommonMessage) ProtoReflect() protoreflect.Message {
	mi := &file_event_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonMessage.ProtoReflect.Descriptor instead.
func (*CommonMessage) Descriptor() ([]byte, []int) {
	return file_event_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *CommonMessage) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *CommonMessage) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

type CommonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partition int32 `protobuf:"varint,1,opt,name=partition,proto3" json:"partition,omitempty"`
	Offset    int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *CommonResponse) Reset() {
	*x = CommonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResponse) ProtoMessage() {}

func (x *CommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResponse.ProtoReflect.Descriptor instead.
func (*CommonResponse) Descriptor() ([]byte, []int) {
	return file_event_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *CommonResponse) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *CommonResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type UserActionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonMessage `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Type   int64          `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	UserId int64          `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserActionReq) Reset() {
	*x = UserActionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserActionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActionReq) ProtoMessage() {}

func (x *UserActionReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActionReq.ProtoReflect.Descriptor instead.
func (*UserActionReq) Descriptor() ([]byte, []int) {
	return file_event_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *UserActionReq) GetCommon() *CommonMessage {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *UserActionReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UserActionReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

var File_event_rpc_proto protoreflect.FileDescriptor

var file_event_rpc_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x70, 0x63, 0x22, 0x3f, 0x0a, 0x0d,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x46, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x6e, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x72,
	0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x32, 0x4d, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x70,
	0x63, 0x12, 0x41, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_event_rpc_proto_rawDescOnce sync.Once
	file_event_rpc_proto_rawDescData = file_event_rpc_proto_rawDesc
)

func file_event_rpc_proto_rawDescGZIP() []byte {
	file_event_rpc_proto_rawDescOnce.Do(func() {
		file_event_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_rpc_proto_rawDescData)
	})
	return file_event_rpc_proto_rawDescData
}

var file_event_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_event_rpc_proto_goTypes = []interface{}{
	(*CommonMessage)(nil),  // 0: event_rpc.commonMessage
	(*CommonResponse)(nil), // 1: event_rpc.commonResponse
	(*UserActionReq)(nil),  // 2: event_rpc.userActionReq
}
var file_event_rpc_proto_depIdxs = []int32{
	0, // 0: event_rpc.userActionReq.common:type_name -> event_rpc.commonMessage
	2, // 1: event_rpc.eventRpc.userAction:input_type -> event_rpc.userActionReq
	1, // 2: event_rpc.eventRpc.userAction:output_type -> event_rpc.commonResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_event_rpc_proto_init() }
func file_event_rpc_proto_init() {
	if File_event_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_event_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserActionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_rpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_event_rpc_proto_goTypes,
		DependencyIndexes: file_event_rpc_proto_depIdxs,
		MessageInfos:      file_event_rpc_proto_msgTypes,
	}.Build()
	File_event_rpc_proto = out.File
	file_event_rpc_proto_rawDesc = nil
	file_event_rpc_proto_goTypes = nil
	file_event_rpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EventRpcClient is the client API for EventRpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventRpcClient interface {
	UserAction(ctx context.Context, in *UserActionReq, opts ...grpc.CallOption) (*CommonResponse, error)
}

type eventRpcClient struct {
	cc grpc.ClientConnInterface
}

func NewEventRpcClient(cc grpc.ClientConnInterface) EventRpcClient {
	return &eventRpcClient{cc}
}

func (c *eventRpcClient) UserAction(ctx context.Context, in *UserActionReq, opts ...grpc.CallOption) (*CommonResponse, error) {
	out := new(CommonResponse)
	err := c.cc.Invoke(ctx, "/event_rpc.eventRpc/userAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventRpcServer is the server API for EventRpc service.
type EventRpcServer interface {
	UserAction(context.Context, *UserActionReq) (*CommonResponse, error)
}

// UnimplementedEventRpcServer can be embedded to have forward compatible implementations.
type UnimplementedEventRpcServer struct {
}

func (*UnimplementedEventRpcServer) UserAction(context.Context, *UserActionReq) (*CommonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserAction not implemented")
}

func RegisterEventRpcServer(s *grpc.Server, srv EventRpcServer) {
	s.RegisterService(&_EventRpc_serviceDesc, srv)
}

func _EventRpc_UserAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserActionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventRpcServer).UserAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event_rpc.eventRpc/UserAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventRpcServer).UserAction(ctx, req.(*UserActionReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventRpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "event_rpc.eventRpc",
	HandlerType: (*EventRpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "userAction",
			Handler:    _EventRpc_UserAction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "event_rpc.proto",
}

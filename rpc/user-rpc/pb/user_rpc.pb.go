// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: user_rpc.proto

package user_rpc

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AccessToken    string `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	NickName       string `protobuf:"bytes,3,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	LoginName      string `protobuf:"bytes,4,opt,name=login_name,json=loginName,proto3" json:"login_name,omitempty"`
	UserRole       string `protobuf:"bytes,5,opt,name=user_role,json=userRole,proto3" json:"user_role,omitempty"`
	Country        string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	Channel        string `protobuf:"bytes,7,opt,name=channel,proto3" json:"channel,omitempty"`
	UserChannel    string `protobuf:"bytes,8,opt,name=user_channel,json=userChannel,proto3" json:"user_channel,omitempty"`
	Avatar         string `protobuf:"bytes,9,opt,name=avatar,proto3" json:"avatar,omitempty"`
	RegGuestId     string `protobuf:"bytes,10,opt,name=reg_guest_id,json=regGuestId,proto3" json:"reg_guest_id,omitempty"`
	RegPkgName     string `protobuf:"bytes,11,opt,name=reg_pkg_name,json=regPkgName,proto3" json:"reg_pkg_name,omitempty"`
	CreateTimeUnix int64  `protobuf:"varint,12,opt,name=create_time_unix,json=createTimeUnix,proto3" json:"create_time_unix,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_user_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *UserInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserInfo) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *UserInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserInfo) GetLoginName() string {
	if x != nil {
		return x.LoginName
	}
	return ""
}

func (x *UserInfo) GetUserRole() string {
	if x != nil {
		return x.UserRole
	}
	return ""
}

func (x *UserInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UserInfo) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *UserInfo) GetUserChannel() string {
	if x != nil {
		return x.UserChannel
	}
	return ""
}

func (x *UserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserInfo) GetRegGuestId() string {
	if x != nil {
		return x.RegGuestId
	}
	return ""
}

func (x *UserInfo) GetRegPkgName() string {
	if x != nil {
		return x.RegPkgName
	}
	return ""
}

func (x *UserInfo) GetCreateTimeUnix() int64 {
	if x != nil {
		return x.CreateTimeUnix
	}
	return 0
}

type ActionPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayChannel    int64 `protobuf:"varint,1,opt,name=pay_channel,json=payChannel,proto3" json:"pay_channel,omitempty"`
	VipPromotion  int64 `protobuf:"varint,2,opt,name=vip_promotion,json=vipPromotion,proto3" json:"vip_promotion,omitempty"`
	CoinPromotion int64 `protobuf:"varint,3,opt,name=coin_promotion,json=coinPromotion,proto3" json:"coin_promotion,omitempty"`
}

func (x *ActionPoint) Reset() {
	*x = ActionPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionPoint) ProtoMessage() {}

func (x *ActionPoint) ProtoReflect() protoreflect.Message {
	mi := &file_user_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionPoint.ProtoReflect.Descriptor instead.
func (*ActionPoint) Descriptor() ([]byte, []int) {
	return file_user_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *ActionPoint) GetPayChannel() int64 {
	if x != nil {
		return x.PayChannel
	}
	return 0
}

func (x *ActionPoint) GetVipPromotion() int64 {
	if x != nil {
		return x.VipPromotion
	}
	return 0
}

func (x *ActionPoint) GetCoinPromotion() int64 {
	if x != nil {
		return x.CoinPromotion
	}
	return 0
}

type UserExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int64        `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ActionPoint *ActionPoint `protobuf:"bytes,2,opt,name=action_point,json=actionPoint,proto3" json:"action_point,omitempty"`
}

func (x *UserExt) Reset() {
	*x = UserExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserExt) ProtoMessage() {}

func (x *UserExt) ProtoReflect() protoreflect.Message {
	mi := &file_user_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserExt.ProtoReflect.Descriptor instead.
func (*UserExt) Descriptor() ([]byte, []int) {
	return file_user_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *UserExt) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserExt) GetActionPoint() *ActionPoint {
	if x != nil {
		return x.ActionPoint
	}
	return nil
}

type GetUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserReq) Reset() {
	*x = GetUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserReq) ProtoMessage() {}

func (x *GetUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserReq.ProtoReflect.Descriptor instead.
func (*GetUserReq) Descriptor() ([]byte, []int) {
	return file_user_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *UserInfo `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GetUserRes) Reset() {
	*x = GetUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRes) ProtoMessage() {}

func (x *GetUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRes.ProtoReflect.Descriptor instead.
func (*GetUserRes) Descriptor() ([]byte, []int) {
	return file_user_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserRes) GetUser() *UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

type AddUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar string `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *AddUserReq) Reset() {
	*x = AddUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserReq) ProtoMessage() {}

func (x *AddUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserReq.ProtoReflect.Descriptor instead.
func (*AddUserReq) Descriptor() ([]byte, []int) {
	return file_user_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *AddUserReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type AddUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *UserInfo `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *AddUserRes) Reset() {
	*x = AddUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_rpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserRes) ProtoMessage() {}

func (x *AddUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_rpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserRes.ProtoReflect.Descriptor instead.
func (*AddUserRes) Descriptor() ([]byte, []int) {
	return file_user_rpc_proto_rawDescGZIP(), []int{6}
}

func (x *AddUserRes) GetUser() *UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

type GuestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuestId     string `protobuf:"bytes,1,opt,name=guest_id,json=guestId,proto3" json:"guest_id,omitempty"`
	GuestName   string `protobuf:"bytes,2,opt,name=guest_name,json=guestName,proto3" json:"guest_name,omitempty"`
	Platform    string `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	AndroidId   string `protobuf:"bytes,4,opt,name=android_id,json=androidId,proto3" json:"android_id,omitempty"`
	AppVersion  string `protobuf:"bytes,5,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	Country     string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	Imei        string `protobuf:"bytes,7,opt,name=imei,proto3" json:"imei,omitempty"`
	Channel     string `protobuf:"bytes,8,opt,name=channel,proto3" json:"channel,omitempty"`
	CampaignId  string `protobuf:"bytes,9,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	UserChannel string `protobuf:"bytes,10,opt,name=user_channel,json=userChannel,proto3" json:"user_channel,omitempty"`
}

func (x *GuestInfo) Reset() {
	*x = GuestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_rpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuestInfo) ProtoMessage() {}

func (x *GuestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_rpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuestInfo.ProtoReflect.Descriptor instead.
func (*GuestInfo) Descriptor() ([]byte, []int) {
	return file_user_rpc_proto_rawDescGZIP(), []int{7}
}

func (x *GuestInfo) GetGuestId() string {
	if x != nil {
		return x.GuestId
	}
	return ""
}

func (x *GuestInfo) GetGuestName() string {
	if x != nil {
		return x.GuestName
	}
	return ""
}

func (x *GuestInfo) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *GuestInfo) GetAndroidId() string {
	if x != nil {
		return x.AndroidId
	}
	return ""
}

func (x *GuestInfo) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *GuestInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GuestInfo) GetImei() string {
	if x != nil {
		return x.Imei
	}
	return ""
}

func (x *GuestInfo) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *GuestInfo) GetCampaignId() string {
	if x != nil {
		return x.CampaignId
	}
	return ""
}

func (x *GuestInfo) GetUserChannel() string {
	if x != nil {
		return x.UserChannel
	}
	return ""
}

type GuestInitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuestId     string `protobuf:"bytes,1,opt,name=guest_id,json=guestId,proto3" json:"guest_id,omitempty"`
	Platform    string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	AndroidId   string `protobuf:"bytes,3,opt,name=android_id,json=androidId,proto3" json:"android_id,omitempty"`
	AppVersion  string `protobuf:"bytes,4,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	Country     string `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	Imei        string `protobuf:"bytes,6,opt,name=imei,proto3" json:"imei,omitempty"`
	Channel     string `protobuf:"bytes,7,opt,name=channel,proto3" json:"channel,omitempty"`
	CampaignId  string `protobuf:"bytes,8,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	UserChannel string `protobuf:"bytes,9,opt,name=user_channel,json=userChannel,proto3" json:"user_channel,omitempty"`
}

func (x *GuestInitReq) Reset() {
	*x = GuestInitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_rpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuestInitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuestInitReq) ProtoMessage() {}

func (x *GuestInitReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_rpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuestInitReq.ProtoReflect.Descriptor instead.
func (*GuestInitReq) Descriptor() ([]byte, []int) {
	return file_user_rpc_proto_rawDescGZIP(), []int{8}
}

func (x *GuestInitReq) GetGuestId() string {
	if x != nil {
		return x.GuestId
	}
	return ""
}

func (x *GuestInitReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *GuestInitReq) GetAndroidId() string {
	if x != nil {
		return x.AndroidId
	}
	return ""
}

func (x *GuestInitReq) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *GuestInitReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GuestInitReq) GetImei() string {
	if x != nil {
		return x.Imei
	}
	return ""
}

func (x *GuestInitReq) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *GuestInitReq) GetCampaignId() string {
	if x != nil {
		return x.CampaignId
	}
	return ""
}

func (x *GuestInitReq) GetUserChannel() string {
	if x != nil {
		return x.UserChannel
	}
	return ""
}

type GuestInitRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guest *GuestInfo `protobuf:"bytes,1,opt,name=guest,proto3" json:"guest,omitempty"`
}

func (x *GuestInitRes) Reset() {
	*x = GuestInitRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_rpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuestInitRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuestInitRes) ProtoMessage() {}

func (x *GuestInitRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_rpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuestInitRes.ProtoReflect.Descriptor instead.
func (*GuestInitRes) Descriptor() ([]byte, []int) {
	return file_user_rpc_proto_rawDescGZIP(), []int{9}
}

func (x *GuestInitRes) GetGuest() *GuestInfo {
	if x != nil {
		return x.Guest
	}
	return nil
}

type GuestLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuestId     string `protobuf:"bytes,1,opt,name=guest_id,json=guestId,proto3" json:"guest_id,omitempty"`
	Platform    string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	Country     string `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	Channel     string `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	UserChannel string `protobuf:"bytes,5,opt,name=user_channel,json=userChannel,proto3" json:"user_channel,omitempty"`
	PkgName     string `protobuf:"bytes,6,opt,name=pkg_name,json=pkgName,proto3" json:"pkg_name,omitempty"`
}

func (x *GuestLoginReq) Reset() {
	*x = GuestLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_rpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuestLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuestLoginReq) ProtoMessage() {}

func (x *GuestLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_rpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuestLoginReq.ProtoReflect.Descriptor instead.
func (*GuestLoginReq) Descriptor() ([]byte, []int) {
	return file_user_rpc_proto_rawDescGZIP(), []int{10}
}

func (x *GuestLoginReq) GetGuestId() string {
	if x != nil {
		return x.GuestId
	}
	return ""
}

func (x *GuestLoginReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *GuestLoginReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GuestLoginReq) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *GuestLoginReq) GetUserChannel() string {
	if x != nil {
		return x.UserChannel
	}
	return ""
}

func (x *GuestLoginReq) GetPkgName() string {
	if x != nil {
		return x.PkgName
	}
	return ""
}

type GuestLoginRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *UserInfo `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GuestLoginRes) Reset() {
	*x = GuestLoginRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_rpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuestLoginRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuestLoginRes) ProtoMessage() {}

func (x *GuestLoginRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_rpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuestLoginRes.ProtoReflect.Descriptor instead.
func (*GuestLoginRes) Descriptor() ([]byte, []int) {
	return file_user_rpc_proto_rawDescGZIP(), []int{11}
}

func (x *GuestLoginRes) GetUser() *UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

type PageAnchorRecommendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Skip   int64 `protobuf:"varint,2,opt,name=skip,proto3" json:"skip,omitempty"`
	Limit  int64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *PageAnchorRecommendReq) Reset() {
	*x = PageAnchorRecommendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_rpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageAnchorRecommendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageAnchorRecommendReq) ProtoMessage() {}

func (x *PageAnchorRecommendReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_rpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageAnchorRecommendReq.ProtoReflect.Descriptor instead.
func (*PageAnchorRecommendReq) Descriptor() ([]byte, []int) {
	return file_user_rpc_proto_rawDescGZIP(), []int{12}
}

func (x *PageAnchorRecommendReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PageAnchorRecommendReq) GetSkip() int64 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *PageAnchorRecommendReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type PageAnchorRecommendRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Anchors []*UserInfo `protobuf:"bytes,1,rep,name=anchors,proto3" json:"anchors,omitempty"`
}

func (x *PageAnchorRecommendRes) Reset() {
	*x = PageAnchorRecommendRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_rpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageAnchorRecommendRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageAnchorRecommendRes) ProtoMessage() {}

func (x *PageAnchorRecommendRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_rpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageAnchorRecommendRes.ProtoReflect.Descriptor instead.
func (*PageAnchorRecommendRes) Descriptor() ([]byte, []int) {
	return file_user_rpc_proto_rawDescGZIP(), []int{13}
}

func (x *PageAnchorRecommendRes) GetAnchors() []*UserInfo {
	if x != nil {
		return x.Anchors
	}
	return nil
}

type AddActionPointReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PayChannelPoint    int64 `protobuf:"varint,2,opt,name=pay_channel_point,json=payChannelPoint,proto3" json:"pay_channel_point,omitempty"`
	VipPromotionPoint  int64 `protobuf:"varint,3,opt,name=vip_promotion_point,json=vipPromotionPoint,proto3" json:"vip_promotion_point,omitempty"`
	CoinPromotionPoint int64 `protobuf:"varint,4,opt,name=coin_promotion_point,json=coinPromotionPoint,proto3" json:"coin_promotion_point,omitempty"`
}

func (x *AddActionPointReq) Reset() {
	*x = AddActionPointReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_rpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddActionPointReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddActionPointReq) ProtoMessage() {}

func (x *AddActionPointReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_rpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddActionPointReq.ProtoReflect.Descriptor instead.
func (*AddActionPointReq) Descriptor() ([]byte, []int) {
	return file_user_rpc_proto_rawDescGZIP(), []int{14}
}

func (x *AddActionPointReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddActionPointReq) GetPayChannelPoint() int64 {
	if x != nil {
		return x.PayChannelPoint
	}
	return 0
}

func (x *AddActionPointReq) GetVipPromotionPoint() int64 {
	if x != nil {
		return x.VipPromotionPoint
	}
	return 0
}

func (x *AddActionPointReq) GetCoinPromotionPoint() int64 {
	if x != nil {
		return x.CoinPromotionPoint
	}
	return 0
}

type AddActionPointRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserExt *UserExt `protobuf:"bytes,1,opt,name=user_ext,json=userExt,proto3" json:"user_ext,omitempty"`
}

func (x *AddActionPointRes) Reset() {
	*x = AddActionPointRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_rpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddActionPointRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddActionPointRes) ProtoMessage() {}

func (x *AddActionPointRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_rpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddActionPointRes.ProtoReflect.Descriptor instead.
func (*AddActionPointRes) Descriptor() ([]byte, []int) {
	return file_user_rpc_proto_rawDescGZIP(), []int{15}
}

func (x *AddActionPointRes) GetUserExt() *UserExt {
	if x != nil {
		return x.UserExt
	}
	return nil
}

type CheckAccessTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	UserInfo    bool   `protobuf:"varint,2,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
}

func (x *CheckAccessTokenReq) Reset() {
	*x = CheckAccessTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_rpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAccessTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAccessTokenReq) ProtoMessage() {}

func (x *CheckAccessTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_rpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAccessTokenReq.ProtoReflect.Descriptor instead.
func (*CheckAccessTokenReq) Descriptor() ([]byte, []int) {
	return file_user_rpc_proto_rawDescGZIP(), []int{16}
}

func (x *CheckAccessTokenReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CheckAccessTokenReq) GetUserInfo() bool {
	if x != nil {
		return x.UserInfo
	}
	return false
}

type CheckAccessTokenRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool      `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	UserInfo *UserInfo `protobuf:"bytes,2,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
}

func (x *CheckAccessTokenRes) Reset() {
	*x = CheckAccessTokenRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_rpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAccessTokenRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAccessTokenRes) ProtoMessage() {}

func (x *CheckAccessTokenRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_rpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAccessTokenRes.ProtoReflect.Descriptor instead.
func (*CheckAccessTokenRes) Descriptor() ([]byte, []int) {
	return file_user_rpc_proto_rawDescGZIP(), []int{17}
}

func (x *CheckAccessTokenRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CheckAccessTokenRes) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

var File_user_rpc_proto protoreflect.FileDescriptor

var file_user_rpc_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x22, 0xfc, 0x02, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x20, 0x0a, 0x0c, 0x72,
	0x65, 0x67, 0x5f, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x47, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0c, 0x72, 0x65, 0x67, 0x5f, 0x70, 0x6b, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x50, 0x6b, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75,
	0x6e, 0x69, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x22, 0x7a, 0x0a, 0x0b, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70,
	0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x69, 0x70,
	0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x76, 0x69, 0x70, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x45, 0x78, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0c, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x22, 0x25, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x0a, 0x67, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x70,
	0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x22, 0x24, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x34, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xad, 0x02, 0x0a,
	0x09, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d,
	0x65, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x91, 0x02, 0x0a,
	0x0c, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d,
	0x65, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x22, 0x39, 0x0a, 0x0c, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x29, 0x0a, 0x05, 0x67, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x0d,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x6b, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x6b, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x37, 0x0a, 0x0d, 0x67, 0x75, 0x65, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22,
	0x5b, 0x0a, 0x16, 0x70, 0x61, 0x67, 0x65, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x46, 0x0a, 0x16,
	0x70, 0x61, 0x67, 0x65, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72,
	0x70, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x6e, 0x63,
	0x68, 0x6f, 0x72, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x2e, 0x0a, 0x13, 0x76, 0x69, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x76, 0x69,
	0x70, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x30, 0x0a, 0x14, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x63,
	0x6f, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x22, 0x41, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x72, 0x70, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x45, 0x78, 0x74, 0x52, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x45, 0x78, 0x74, 0x22, 0x55, 0x0a, 0x13, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x60, 0x0a, 0x13, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xed, 0x03,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x52, 0x70, 0x63, 0x12, 0x35, 0x0a, 0x07, 0x67, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x12, 0x35, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x61, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x61, 0x64, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x69, 0x74, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x67, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x13, 0x70, 0x61, 0x67, 0x65, 0x41, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x20, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x41, 0x6e, 0x63, 0x68, 0x6f,
	0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x41, 0x6e, 0x63,
	0x68, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x12,
	0x4a, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x61, 0x64, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x61, 0x64, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x10, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1d,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_rpc_proto_rawDescOnce sync.Once
	file_user_rpc_proto_rawDescData = file_user_rpc_proto_rawDesc
)

func file_user_rpc_proto_rawDescGZIP() []byte {
	file_user_rpc_proto_rawDescOnce.Do(func() {
		file_user_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_rpc_proto_rawDescData)
	})
	return file_user_rpc_proto_rawDescData
}

var file_user_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_user_rpc_proto_goTypes = []interface{}{
	(*UserInfo)(nil),               // 0: user_rpc.userInfo
	(*ActionPoint)(nil),            // 1: user_rpc.actionPoint
	(*UserExt)(nil),                // 2: user_rpc.userExt
	(*GetUserReq)(nil),             // 3: user_rpc.getUserReq
	(*GetUserRes)(nil),             // 4: user_rpc.getUserRes
	(*AddUserReq)(nil),             // 5: user_rpc.addUserReq
	(*AddUserRes)(nil),             // 6: user_rpc.addUserRes
	(*GuestInfo)(nil),              // 7: user_rpc.guestInfo
	(*GuestInitReq)(nil),           // 8: user_rpc.guestInitReq
	(*GuestInitRes)(nil),           // 9: user_rpc.guestInitRes
	(*GuestLoginReq)(nil),          // 10: user_rpc.guestLoginReq
	(*GuestLoginRes)(nil),          // 11: user_rpc.guestLoginRes
	(*PageAnchorRecommendReq)(nil), // 12: user_rpc.pageAnchorRecommendReq
	(*PageAnchorRecommendRes)(nil), // 13: user_rpc.pageAnchorRecommendRes
	(*AddActionPointReq)(nil),      // 14: user_rpc.addActionPointReq
	(*AddActionPointRes)(nil),      // 15: user_rpc.addActionPointRes
	(*CheckAccessTokenReq)(nil),    // 16: user_rpc.checkAccessTokenReq
	(*CheckAccessTokenRes)(nil),    // 17: user_rpc.checkAccessTokenRes
}
var file_user_rpc_proto_depIdxs = []int32{
	1,  // 0: user_rpc.userExt.action_point:type_name -> user_rpc.actionPoint
	0,  // 1: user_rpc.getUserRes.user:type_name -> user_rpc.userInfo
	0,  // 2: user_rpc.addUserRes.user:type_name -> user_rpc.userInfo
	7,  // 3: user_rpc.guestInitRes.guest:type_name -> user_rpc.guestInfo
	0,  // 4: user_rpc.guestLoginRes.user:type_name -> user_rpc.userInfo
	0,  // 5: user_rpc.pageAnchorRecommendRes.anchors:type_name -> user_rpc.userInfo
	2,  // 6: user_rpc.addActionPointRes.user_ext:type_name -> user_rpc.userExt
	0,  // 7: user_rpc.checkAccessTokenRes.user_info:type_name -> user_rpc.userInfo
	3,  // 8: user_rpc.userRpc.getUser:input_type -> user_rpc.getUserReq
	5,  // 9: user_rpc.userRpc.addUser:input_type -> user_rpc.addUserReq
	8,  // 10: user_rpc.userRpc.guestInit:input_type -> user_rpc.guestInitReq
	10, // 11: user_rpc.userRpc.guestLogin:input_type -> user_rpc.guestLoginReq
	12, // 12: user_rpc.userRpc.pageAnchorRecommend:input_type -> user_rpc.pageAnchorRecommendReq
	14, // 13: user_rpc.userRpc.addActionPoint:input_type -> user_rpc.addActionPointReq
	16, // 14: user_rpc.userRpc.checkAccessToken:input_type -> user_rpc.checkAccessTokenReq
	4,  // 15: user_rpc.userRpc.getUser:output_type -> user_rpc.getUserRes
	6,  // 16: user_rpc.userRpc.addUser:output_type -> user_rpc.addUserRes
	9,  // 17: user_rpc.userRpc.guestInit:output_type -> user_rpc.guestInitRes
	11, // 18: user_rpc.userRpc.guestLogin:output_type -> user_rpc.guestLoginRes
	13, // 19: user_rpc.userRpc.pageAnchorRecommend:output_type -> user_rpc.pageAnchorRecommendRes
	15, // 20: user_rpc.userRpc.addActionPoint:output_type -> user_rpc.addActionPointRes
	17, // 21: user_rpc.userRpc.checkAccessToken:output_type -> user_rpc.checkAccessTokenRes
	15, // [15:22] is the sub-list for method output_type
	8,  // [8:15] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_user_rpc_proto_init() }
func file_user_rpc_proto_init() {
	if File_user_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_rpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_rpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_rpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuestInitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_rpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuestInitRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_rpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuestLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_rpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuestLoginRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_rpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageAnchorRecommendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_rpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageAnchorRecommendRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_rpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddActionPointReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_rpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddActionPointRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_rpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAccessTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_rpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAccessTokenRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_rpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_rpc_proto_goTypes,
		DependencyIndexes: file_user_rpc_proto_depIdxs,
		MessageInfos:      file_user_rpc_proto_msgTypes,
	}.Build()
	File_user_rpc_proto = out.File
	file_user_rpc_proto_rawDesc = nil
	file_user_rpc_proto_goTypes = nil
	file_user_rpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserRpcClient is the client API for UserRpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserRpcClient interface {
	GetUser(ctx context.Context, in *GetUserReq, opts ...grpc.CallOption) (*GetUserRes, error)
	AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*AddUserRes, error)
	GuestInit(ctx context.Context, in *GuestInitReq, opts ...grpc.CallOption) (*GuestInitRes, error)
	GuestLogin(ctx context.Context, in *GuestLoginReq, opts ...grpc.CallOption) (*GuestLoginRes, error)
	PageAnchorRecommend(ctx context.Context, in *PageAnchorRecommendReq, opts ...grpc.CallOption) (*PageAnchorRecommendRes, error)
	AddActionPoint(ctx context.Context, in *AddActionPointReq, opts ...grpc.CallOption) (*AddActionPointRes, error)
	CheckAccessToken(ctx context.Context, in *CheckAccessTokenReq, opts ...grpc.CallOption) (*CheckAccessTokenRes, error)
}

type userRpcClient struct {
	cc grpc.ClientConnInterface
}

func NewUserRpcClient(cc grpc.ClientConnInterface) UserRpcClient {
	return &userRpcClient{cc}
}

func (c *userRpcClient) GetUser(ctx context.Context, in *GetUserReq, opts ...grpc.CallOption) (*GetUserRes, error) {
	out := new(GetUserRes)
	err := c.cc.Invoke(ctx, "/user_rpc.userRpc/getUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRpcClient) AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*AddUserRes, error) {
	out := new(AddUserRes)
	err := c.cc.Invoke(ctx, "/user_rpc.userRpc/addUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRpcClient) GuestInit(ctx context.Context, in *GuestInitReq, opts ...grpc.CallOption) (*GuestInitRes, error) {
	out := new(GuestInitRes)
	err := c.cc.Invoke(ctx, "/user_rpc.userRpc/guestInit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRpcClient) GuestLogin(ctx context.Context, in *GuestLoginReq, opts ...grpc.CallOption) (*GuestLoginRes, error) {
	out := new(GuestLoginRes)
	err := c.cc.Invoke(ctx, "/user_rpc.userRpc/guestLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRpcClient) PageAnchorRecommend(ctx context.Context, in *PageAnchorRecommendReq, opts ...grpc.CallOption) (*PageAnchorRecommendRes, error) {
	out := new(PageAnchorRecommendRes)
	err := c.cc.Invoke(ctx, "/user_rpc.userRpc/pageAnchorRecommend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRpcClient) AddActionPoint(ctx context.Context, in *AddActionPointReq, opts ...grpc.CallOption) (*AddActionPointRes, error) {
	out := new(AddActionPointRes)
	err := c.cc.Invoke(ctx, "/user_rpc.userRpc/addActionPoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRpcClient) CheckAccessToken(ctx context.Context, in *CheckAccessTokenReq, opts ...grpc.CallOption) (*CheckAccessTokenRes, error) {
	out := new(CheckAccessTokenRes)
	err := c.cc.Invoke(ctx, "/user_rpc.userRpc/checkAccessToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserRpcServer is the server API for UserRpc service.
type UserRpcServer interface {
	GetUser(context.Context, *GetUserReq) (*GetUserRes, error)
	AddUser(context.Context, *AddUserReq) (*AddUserRes, error)
	GuestInit(context.Context, *GuestInitReq) (*GuestInitRes, error)
	GuestLogin(context.Context, *GuestLoginReq) (*GuestLoginRes, error)
	PageAnchorRecommend(context.Context, *PageAnchorRecommendReq) (*PageAnchorRecommendRes, error)
	AddActionPoint(context.Context, *AddActionPointReq) (*AddActionPointRes, error)
	CheckAccessToken(context.Context, *CheckAccessTokenReq) (*CheckAccessTokenRes, error)
}

// UnimplementedUserRpcServer can be embedded to have forward compatible implementations.
type UnimplementedUserRpcServer struct {
}

func (*UnimplementedUserRpcServer) GetUser(context.Context, *GetUserReq) (*GetUserRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedUserRpcServer) AddUser(context.Context, *AddUserReq) (*AddUserRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUser not implemented")
}
func (*UnimplementedUserRpcServer) GuestInit(context.Context, *GuestInitReq) (*GuestInitRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuestInit not implemented")
}
func (*UnimplementedUserRpcServer) GuestLogin(context.Context, *GuestLoginReq) (*GuestLoginRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GuestLogin not implemented")
}
func (*UnimplementedUserRpcServer) PageAnchorRecommend(context.Context, *PageAnchorRecommendReq) (*PageAnchorRecommendRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PageAnchorRecommend not implemented")
}
func (*UnimplementedUserRpcServer) AddActionPoint(context.Context, *AddActionPointReq) (*AddActionPointRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddActionPoint not implemented")
}
func (*UnimplementedUserRpcServer) CheckAccessToken(context.Context, *CheckAccessTokenReq) (*CheckAccessTokenRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckAccessToken not implemented")
}

func RegisterUserRpcServer(s *grpc.Server, srv UserRpcServer) {
	s.RegisterService(&_UserRpc_serviceDesc, srv)
}

func _UserRpc_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRpcServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_rpc.userRpc/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRpcServer).GetUser(ctx, req.(*GetUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRpc_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRpcServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_rpc.userRpc/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRpcServer).AddUser(ctx, req.(*AddUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRpc_GuestInit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GuestInitReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRpcServer).GuestInit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_rpc.userRpc/GuestInit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRpcServer).GuestInit(ctx, req.(*GuestInitReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRpc_GuestLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GuestLoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRpcServer).GuestLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_rpc.userRpc/GuestLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRpcServer).GuestLogin(ctx, req.(*GuestLoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRpc_PageAnchorRecommend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PageAnchorRecommendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRpcServer).PageAnchorRecommend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_rpc.userRpc/PageAnchorRecommend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRpcServer).PageAnchorRecommend(ctx, req.(*PageAnchorRecommendReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRpc_AddActionPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddActionPointReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRpcServer).AddActionPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_rpc.userRpc/AddActionPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRpcServer).AddActionPoint(ctx, req.(*AddActionPointReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRpc_CheckAccessToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckAccessTokenReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRpcServer).CheckAccessToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_rpc.userRpc/CheckAccessToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRpcServer).CheckAccessToken(ctx, req.(*CheckAccessTokenReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserRpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user_rpc.userRpc",
	HandlerType: (*UserRpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getUser",
			Handler:    _UserRpc_GetUser_Handler,
		},
		{
			MethodName: "addUser",
			Handler:    _UserRpc_AddUser_Handler,
		},
		{
			MethodName: "guestInit",
			Handler:    _UserRpc_GuestInit_Handler,
		},
		{
			MethodName: "guestLogin",
			Handler:    _UserRpc_GuestLogin_Handler,
		},
		{
			MethodName: "pageAnchorRecommend",
			Handler:    _UserRpc_PageAnchorRecommend_Handler,
		},
		{
			MethodName: "addActionPoint",
			Handler:    _UserRpc_AddActionPoint_Handler,
		},
		{
			MethodName: "checkAccessToken",
			Handler:    _UserRpc_CheckAccessToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_rpc.proto",
}
